//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerEntity", Namespace="http://schemas.datacontract.org/2004/07/InfoTrakMobileService.DataAccess.Entities" +
        "")]
    [System.SerializableAttribute()]
    public partial class CustomerEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobsiteEntity", Namespace="http://schemas.datacontract.org/2004/07/InfoTrakMobileService.DataAccess.Entities" +
        "")]
    [System.SerializableAttribute()]
    public partial class JobsiteEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long JobsiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobsiteNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long JobsiteId {
            get {
                return this.JobsiteIdField;
            }
            set {
                if ((this.JobsiteIdField.Equals(value) != true)) {
                    this.JobsiteIdField = value;
                    this.RaisePropertyChanged("JobsiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobsiteName {
            get {
                return this.JobsiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.JobsiteNameField, value) != true)) {
                    this.JobsiteNameField = value;
                    this.RaisePropertyChanged("JobsiteName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModelEntity", Namespace="http://schemas.datacontract.org/2004/07/InfoTrakMobileService.DataAccess.Entities" +
        "")]
    [System.SerializableAttribute()]
    public partial class ModelEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ModelIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ModelId {
            get {
                return this.ModelIdField;
            }
            set {
                if ((this.ModelIdField.Equals(value) != true)) {
                    this.ModelIdField = value;
                    this.RaisePropertyChanged("ModelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModelName {
            get {
                return this.ModelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelNameField, value) != true)) {
                    this.ModelNameField = value;
                    this.RaisePropertyChanged("ModelName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EquipmentEntity", Namespace="http://schemas.datacontract.org/2004/07/InfoTrakMobileService.DataAccess.Entities" +
        "")]
    [System.SerializableAttribute()]
    public partial class EquipmentEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentFamilyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] EquipmentImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentJobsiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipmentJobsiteAutoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] EquipmentLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipmentModelAutoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSMUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentSerialNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EquipmentUnitNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedDateField, value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentCustomer {
            get {
                return this.EquipmentCustomerField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentCustomerField, value) != true)) {
                    this.EquipmentCustomerField = value;
                    this.RaisePropertyChanged("EquipmentCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentFamily {
            get {
                return this.EquipmentFamilyField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentFamilyField, value) != true)) {
                    this.EquipmentFamilyField = value;
                    this.RaisePropertyChanged("EquipmentFamily");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipmentId {
            get {
                return this.EquipmentIdField;
            }
            set {
                if ((this.EquipmentIdField.Equals(value) != true)) {
                    this.EquipmentIdField = value;
                    this.RaisePropertyChanged("EquipmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] EquipmentImage {
            get {
                return this.EquipmentImageField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentImageField, value) != true)) {
                    this.EquipmentImageField = value;
                    this.RaisePropertyChanged("EquipmentImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentJobsite {
            get {
                return this.EquipmentJobsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentJobsiteField, value) != true)) {
                    this.EquipmentJobsiteField = value;
                    this.RaisePropertyChanged("EquipmentJobsite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipmentJobsiteAuto {
            get {
                return this.EquipmentJobsiteAutoField;
            }
            set {
                if ((this.EquipmentJobsiteAutoField.Equals(value) != true)) {
                    this.EquipmentJobsiteAutoField = value;
                    this.RaisePropertyChanged("EquipmentJobsiteAuto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] EquipmentLocation {
            get {
                return this.EquipmentLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentLocationField, value) != true)) {
                    this.EquipmentLocationField = value;
                    this.RaisePropertyChanged("EquipmentLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentModel {
            get {
                return this.EquipmentModelField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentModelField, value) != true)) {
                    this.EquipmentModelField = value;
                    this.RaisePropertyChanged("EquipmentModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipmentModelAuto {
            get {
                return this.EquipmentModelAutoField;
            }
            set {
                if ((this.EquipmentModelAutoField.Equals(value) != true)) {
                    this.EquipmentModelAutoField = value;
                    this.RaisePropertyChanged("EquipmentModelAuto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSMU {
            get {
                return this.EquipmentSMUField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSMUField, value) != true)) {
                    this.EquipmentSMUField = value;
                    this.RaisePropertyChanged("EquipmentSMU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentSerialNo {
            get {
                return this.EquipmentSerialNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentSerialNoField, value) != true)) {
                    this.EquipmentSerialNoField = value;
                    this.RaisePropertyChanged("EquipmentSerialNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EquipmentUnitNo {
            get {
                return this.EquipmentUnitNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentUnitNoField, value) != true)) {
                    this.EquipmentUnitNoField = value;
                    this.RaisePropertyChanged("EquipmentUnitNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComponentEntity", Namespace="http://schemas.datacontract.org/2004/07/InfoTrakMobileService.DataAccess.Entities" +
        "")]
    [System.SerializableAttribute()]
    public partial class ComponentEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentIdAutoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ComponentImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComponentMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComponentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ComponentPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComponentSideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ComponentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultToolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentId {
            get {
                return this.ComponentIdField;
            }
            set {
                if ((this.ComponentIdField.Equals(value) != true)) {
                    this.ComponentIdField = value;
                    this.RaisePropertyChanged("ComponentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentIdAuto {
            get {
                return this.ComponentIdAutoField;
            }
            set {
                if ((this.ComponentIdAutoField.Equals(value) != true)) {
                    this.ComponentIdAutoField = value;
                    this.RaisePropertyChanged("ComponentIdAuto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ComponentImage {
            get {
                return this.ComponentImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentImageField, value) != true)) {
                    this.ComponentImageField = value;
                    this.RaisePropertyChanged("ComponentImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComponentMethod {
            get {
                return this.ComponentMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentMethodField, value) != true)) {
                    this.ComponentMethodField = value;
                    this.RaisePropertyChanged("ComponentMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComponentName {
            get {
                return this.ComponentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentNameField, value) != true)) {
                    this.ComponentNameField = value;
                    this.RaisePropertyChanged("ComponentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ComponentPosition {
            get {
                return this.ComponentPositionField;
            }
            set {
                if ((this.ComponentPositionField.Equals(value) != true)) {
                    this.ComponentPositionField = value;
                    this.RaisePropertyChanged("ComponentPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComponentSide {
            get {
                return this.ComponentSideField;
            }
            set {
                if ((object.ReferenceEquals(this.ComponentSideField, value) != true)) {
                    this.ComponentSideField = value;
                    this.RaisePropertyChanged("ComponentSide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ComponentType {
            get {
                return this.ComponentTypeField;
            }
            set {
                if ((this.ComponentTypeField.Equals(value) != true)) {
                    this.ComponentTypeField = value;
                    this.RaisePropertyChanged("ComponentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultTool {
            get {
                return this.DefaultToolField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultToolField, value) != true)) {
                    this.DefaultToolField = value;
                    this.RaisePropertyChanged("DefaultTool");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipmentId {
            get {
                return this.EquipmentIdField;
            }
            set {
                if ((this.EquipmentIdField.Equals(value) != true)) {
                    this.EquipmentIdField = value;
                    this.RaisePropertyChanged("EquipmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartNo {
            get {
                return this.PartNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNoField, value) != true)) {
                    this.PartNoField = value;
                    this.RaisePropertyChanged("PartNo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TestPointImageEntity", Namespace="http://schemas.datacontract.org/2004/07/InfoTrakMobileService.DataAccess.Entities" +
        "")]
    [System.SerializableAttribute()]
    public partial class TestPointImageEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CompartTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] TestPointImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToolField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CompartType {
            get {
                return this.CompartTypeField;
            }
            set {
                if ((this.CompartTypeField.Equals(value) != true)) {
                    this.CompartTypeField = value;
                    this.RaisePropertyChanged("CompartType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] TestPointImage {
            get {
                return this.TestPointImageField;
            }
            set {
                if ((object.ReferenceEquals(this.TestPointImageField, value) != true)) {
                    this.TestPointImageField = value;
                    this.RaisePropertyChanged("TestPointImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tool {
            get {
                return this.ToolField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolField, value) != true)) {
                    this.ToolField = value;
                    this.RaisePropertyChanged("Tool");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LimitsEntity", Namespace="http://schemas.datacontract.org/2004/07/InfoTrakMobileService.DataAccess.Entities" +
        "")]
    [System.SerializableAttribute()]
    public partial class LimitsEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> AdjToBaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CATToolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CompartIdAutoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> HiInflectionPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> HiIntercept1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> HiIntercept2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> HiSlope1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> HiSlope2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ITMToolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MiInflectionPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MiIntercept1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MiIntercept2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MiSlope1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> MiSlope2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SlopeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> StartDepthNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WearDepth100PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WearDepth10PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WearDepth110PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WearDepth120PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WearDepth20PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WearDepth30PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WearDepth40PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WearDepth50PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WearDepth60PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WearDepth70PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WearDepth80PercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> WearDepth90PercentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> AdjToBase {
            get {
                return this.AdjToBaseField;
            }
            set {
                if ((this.AdjToBaseField.Equals(value) != true)) {
                    this.AdjToBaseField = value;
                    this.RaisePropertyChanged("AdjToBase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CATTool {
            get {
                return this.CATToolField;
            }
            set {
                if ((object.ReferenceEquals(this.CATToolField, value) != true)) {
                    this.CATToolField = value;
                    this.RaisePropertyChanged("CATTool");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CompartIdAuto {
            get {
                return this.CompartIdAutoField;
            }
            set {
                if ((this.CompartIdAutoField.Equals(value) != true)) {
                    this.CompartIdAutoField = value;
                    this.RaisePropertyChanged("CompartIdAuto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> HiInflectionPoint {
            get {
                return this.HiInflectionPointField;
            }
            set {
                if ((this.HiInflectionPointField.Equals(value) != true)) {
                    this.HiInflectionPointField = value;
                    this.RaisePropertyChanged("HiInflectionPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> HiIntercept1 {
            get {
                return this.HiIntercept1Field;
            }
            set {
                if ((this.HiIntercept1Field.Equals(value) != true)) {
                    this.HiIntercept1Field = value;
                    this.RaisePropertyChanged("HiIntercept1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> HiIntercept2 {
            get {
                return this.HiIntercept2Field;
            }
            set {
                if ((this.HiIntercept2Field.Equals(value) != true)) {
                    this.HiIntercept2Field = value;
                    this.RaisePropertyChanged("HiIntercept2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> HiSlope1 {
            get {
                return this.HiSlope1Field;
            }
            set {
                if ((this.HiSlope1Field.Equals(value) != true)) {
                    this.HiSlope1Field = value;
                    this.RaisePropertyChanged("HiSlope1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> HiSlope2 {
            get {
                return this.HiSlope2Field;
            }
            set {
                if ((this.HiSlope2Field.Equals(value) != true)) {
                    this.HiSlope2Field = value;
                    this.RaisePropertyChanged("HiSlope2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ITMTool {
            get {
                return this.ITMToolField;
            }
            set {
                if ((object.ReferenceEquals(this.ITMToolField, value) != true)) {
                    this.ITMToolField = value;
                    this.RaisePropertyChanged("ITMTool");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Method {
            get {
                return this.MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodField, value) != true)) {
                    this.MethodField = value;
                    this.RaisePropertyChanged("Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MiInflectionPoint {
            get {
                return this.MiInflectionPointField;
            }
            set {
                if ((this.MiInflectionPointField.Equals(value) != true)) {
                    this.MiInflectionPointField = value;
                    this.RaisePropertyChanged("MiInflectionPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MiIntercept1 {
            get {
                return this.MiIntercept1Field;
            }
            set {
                if ((this.MiIntercept1Field.Equals(value) != true)) {
                    this.MiIntercept1Field = value;
                    this.RaisePropertyChanged("MiIntercept1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MiIntercept2 {
            get {
                return this.MiIntercept2Field;
            }
            set {
                if ((this.MiIntercept2Field.Equals(value) != true)) {
                    this.MiIntercept2Field = value;
                    this.RaisePropertyChanged("MiIntercept2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MiSlope1 {
            get {
                return this.MiSlope1Field;
            }
            set {
                if ((this.MiSlope1Field.Equals(value) != true)) {
                    this.MiSlope1Field = value;
                    this.RaisePropertyChanged("MiSlope1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MiSlope2 {
            get {
                return this.MiSlope2Field;
            }
            set {
                if ((this.MiSlope2Field.Equals(value) != true)) {
                    this.MiSlope2Field = value;
                    this.RaisePropertyChanged("MiSlope2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Slope {
            get {
                return this.SlopeField;
            }
            set {
                if ((this.SlopeField.Equals(value) != true)) {
                    this.SlopeField = value;
                    this.RaisePropertyChanged("Slope");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> StartDepthNew {
            get {
                return this.StartDepthNewField;
            }
            set {
                if ((this.StartDepthNewField.Equals(value) != true)) {
                    this.StartDepthNewField = value;
                    this.RaisePropertyChanged("StartDepthNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WearDepth100Percent {
            get {
                return this.WearDepth100PercentField;
            }
            set {
                if ((this.WearDepth100PercentField.Equals(value) != true)) {
                    this.WearDepth100PercentField = value;
                    this.RaisePropertyChanged("WearDepth100Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WearDepth10Percent {
            get {
                return this.WearDepth10PercentField;
            }
            set {
                if ((this.WearDepth10PercentField.Equals(value) != true)) {
                    this.WearDepth10PercentField = value;
                    this.RaisePropertyChanged("WearDepth10Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WearDepth110Percent {
            get {
                return this.WearDepth110PercentField;
            }
            set {
                if ((this.WearDepth110PercentField.Equals(value) != true)) {
                    this.WearDepth110PercentField = value;
                    this.RaisePropertyChanged("WearDepth110Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WearDepth120Percent {
            get {
                return this.WearDepth120PercentField;
            }
            set {
                if ((this.WearDepth120PercentField.Equals(value) != true)) {
                    this.WearDepth120PercentField = value;
                    this.RaisePropertyChanged("WearDepth120Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WearDepth20Percent {
            get {
                return this.WearDepth20PercentField;
            }
            set {
                if ((this.WearDepth20PercentField.Equals(value) != true)) {
                    this.WearDepth20PercentField = value;
                    this.RaisePropertyChanged("WearDepth20Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WearDepth30Percent {
            get {
                return this.WearDepth30PercentField;
            }
            set {
                if ((this.WearDepth30PercentField.Equals(value) != true)) {
                    this.WearDepth30PercentField = value;
                    this.RaisePropertyChanged("WearDepth30Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WearDepth40Percent {
            get {
                return this.WearDepth40PercentField;
            }
            set {
                if ((this.WearDepth40PercentField.Equals(value) != true)) {
                    this.WearDepth40PercentField = value;
                    this.RaisePropertyChanged("WearDepth40Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WearDepth50Percent {
            get {
                return this.WearDepth50PercentField;
            }
            set {
                if ((this.WearDepth50PercentField.Equals(value) != true)) {
                    this.WearDepth50PercentField = value;
                    this.RaisePropertyChanged("WearDepth50Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WearDepth60Percent {
            get {
                return this.WearDepth60PercentField;
            }
            set {
                if ((this.WearDepth60PercentField.Equals(value) != true)) {
                    this.WearDepth60PercentField = value;
                    this.RaisePropertyChanged("WearDepth60Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WearDepth70Percent {
            get {
                return this.WearDepth70PercentField;
            }
            set {
                if ((this.WearDepth70PercentField.Equals(value) != true)) {
                    this.WearDepth70PercentField = value;
                    this.RaisePropertyChanged("WearDepth70Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WearDepth80Percent {
            get {
                return this.WearDepth80PercentField;
            }
            set {
                if ((this.WearDepth80PercentField.Equals(value) != true)) {
                    this.WearDepth80PercentField = value;
                    this.RaisePropertyChanged("WearDepth80Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> WearDepth90Percent {
            get {
                return this.WearDepth90PercentField;
            }
            set {
                if ((this.WearDepth90PercentField.Equals(value) != true)) {
                    this.WearDepth90PercentField = value;
                    this.RaisePropertyChanged("WearDepth90Percent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DealershipLimitEntity", Namespace="http://schemas.datacontract.org/2004/07/InfoTrakMobileService.DataAccess.Entities" +
        "")]
    [System.SerializableAttribute()]
    public partial class DealershipLimitEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ALimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CLimitField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ALimit {
            get {
                return this.ALimitField;
            }
            set {
                if ((this.ALimitField.Equals(value) != true)) {
                    this.ALimitField = value;
                    this.RaisePropertyChanged("ALimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BLimit {
            get {
                return this.BLimitField;
            }
            set {
                if ((this.BLimitField.Equals(value) != true)) {
                    this.BLimitField = value;
                    this.RaisePropertyChanged("BLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CLimit {
            get {
                return this.CLimitField;
            }
            set {
                if ((this.CLimitField.Equals(value) != true)) {
                    this.CLimitField = value;
                    this.RaisePropertyChanged("CLimit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UndercarriageInspectionEntity", Namespace="http://schemas.datacontract.org/2004/07/InfoTrakMobileService.DataAccess.Entities" +
        "")]
    [System.SerializableAttribute()]
    public partial class UndercarriageInspectionEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AbrasiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.InspectionDetails[] DetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DryJointsLeftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DryJointsRightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipmentIdAutoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExaminerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExtCannonLeftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ExtCannonRightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ImpactField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InspectionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InspectorCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobsiteCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MoistureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PackingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SMUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrackSagLeftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TrackSagRightField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Abrasive {
            get {
                return this.AbrasiveField;
            }
            set {
                if ((this.AbrasiveField.Equals(value) != true)) {
                    this.AbrasiveField = value;
                    this.RaisePropertyChanged("Abrasive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.InspectionDetails[] Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DryJointsLeft {
            get {
                return this.DryJointsLeftField;
            }
            set {
                if ((this.DryJointsLeftField.Equals(value) != true)) {
                    this.DryJointsLeftField = value;
                    this.RaisePropertyChanged("DryJointsLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DryJointsRight {
            get {
                return this.DryJointsRightField;
            }
            set {
                if ((this.DryJointsRightField.Equals(value) != true)) {
                    this.DryJointsRightField = value;
                    this.RaisePropertyChanged("DryJointsRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipmentIdAuto {
            get {
                return this.EquipmentIdAutoField;
            }
            set {
                if ((this.EquipmentIdAutoField.Equals(value) != true)) {
                    this.EquipmentIdAutoField = value;
                    this.RaisePropertyChanged("EquipmentIdAuto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Examiner {
            get {
                return this.ExaminerField;
            }
            set {
                if ((object.ReferenceEquals(this.ExaminerField, value) != true)) {
                    this.ExaminerField = value;
                    this.RaisePropertyChanged("Examiner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExtCannonLeft {
            get {
                return this.ExtCannonLeftField;
            }
            set {
                if ((this.ExtCannonLeftField.Equals(value) != true)) {
                    this.ExtCannonLeftField = value;
                    this.RaisePropertyChanged("ExtCannonLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExtCannonRight {
            get {
                return this.ExtCannonRightField;
            }
            set {
                if ((this.ExtCannonRightField.Equals(value) != true)) {
                    this.ExtCannonRightField = value;
                    this.RaisePropertyChanged("ExtCannonRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Impact {
            get {
                return this.ImpactField;
            }
            set {
                if ((this.ImpactField.Equals(value) != true)) {
                    this.ImpactField = value;
                    this.RaisePropertyChanged("Impact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InspectionDate {
            get {
                return this.InspectionDateField;
            }
            set {
                if ((object.ReferenceEquals(this.InspectionDateField, value) != true)) {
                    this.InspectionDateField = value;
                    this.RaisePropertyChanged("InspectionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InspectorComments {
            get {
                return this.InspectorCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.InspectorCommentsField, value) != true)) {
                    this.InspectorCommentsField = value;
                    this.RaisePropertyChanged("InspectorComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobsiteComments {
            get {
                return this.JobsiteCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.JobsiteCommentsField, value) != true)) {
                    this.JobsiteCommentsField = value;
                    this.RaisePropertyChanged("JobsiteComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Moisture {
            get {
                return this.MoistureField;
            }
            set {
                if ((this.MoistureField.Equals(value) != true)) {
                    this.MoistureField = value;
                    this.RaisePropertyChanged("Moisture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Packing {
            get {
                return this.PackingField;
            }
            set {
                if ((this.PackingField.Equals(value) != true)) {
                    this.PackingField = value;
                    this.RaisePropertyChanged("Packing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SMU {
            get {
                return this.SMUField;
            }
            set {
                if ((object.ReferenceEquals(this.SMUField, value) != true)) {
                    this.SMUField = value;
                    this.RaisePropertyChanged("SMU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrackSagLeft {
            get {
                return this.TrackSagLeftField;
            }
            set {
                if ((this.TrackSagLeftField.Equals(value) != true)) {
                    this.TrackSagLeftField = value;
                    this.RaisePropertyChanged("TrackSagLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrackSagRight {
            get {
                return this.TrackSagRightField;
            }
            set {
                if ((this.TrackSagRightField.Equals(value) != true)) {
                    this.TrackSagRightField = value;
                    this.RaisePropertyChanged("TrackSagRight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InspectionDetails", Namespace="http://schemas.datacontract.org/2004/07/InfoTrakMobileService.DataAccess.Entities" +
        "")]
    [System.SerializableAttribute()]
    public partial class InspectionDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttachmentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CompartIdAutoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlangeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PercentageWornField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToolUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TrackUnitAutoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AttachmentType {
            get {
                return this.AttachmentTypeField;
            }
            set {
                if ((this.AttachmentTypeField.Equals(value) != true)) {
                    this.AttachmentTypeField = value;
                    this.RaisePropertyChanged("AttachmentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CompartIdAuto {
            get {
                return this.CompartIdAutoField;
            }
            set {
                if ((this.CompartIdAutoField.Equals(value) != true)) {
                    this.CompartIdAutoField = value;
                    this.RaisePropertyChanged("CompartIdAuto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlangeType {
            get {
                return this.FlangeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FlangeTypeField, value) != true)) {
                    this.FlangeTypeField = value;
                    this.RaisePropertyChanged("FlangeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PercentageWorn {
            get {
                return this.PercentageWornField;
            }
            set {
                if ((this.PercentageWornField.Equals(value) != true)) {
                    this.PercentageWornField = value;
                    this.RaisePropertyChanged("PercentageWorn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reading {
            get {
                return this.ReadingField;
            }
            set {
                if ((object.ReferenceEquals(this.ReadingField, value) != true)) {
                    this.ReadingField = value;
                    this.RaisePropertyChanged("Reading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToolUsed {
            get {
                return this.ToolUsedField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolUsedField, value) != true)) {
                    this.ToolUsedField = value;
                    this.RaisePropertyChanged("ToolUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TrackUnitAuto {
            get {
                return this.TrackUnitAutoField;
            }
            set {
                if ((this.TrackUnitAutoField.Equals(value) != true)) {
                    this.TrackUnitAutoField = value;
                    this.RaisePropertyChanged("TrackUnitAuto");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserPreferenceEntity", Namespace="http://schemas.datacontract.org/2004/07/InfoTrakMobileService.DataAccess.Entities" +
        "")]
    [System.SerializableAttribute()]
    public partial class UserPreferenceEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UndercarriagUOMField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UndercarriagUOM {
            get {
                return this.UndercarriagUOMField;
            }
            set {
                if ((object.ReferenceEquals(this.UndercarriagUOMField, value) != true)) {
                    this.UndercarriagUOMField = value;
                    this.RaisePropertyChanged("UndercarriagUOM");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NewEquipmentEntity", Namespace="http://schemas.datacontract.org/2004/07/InfoTrakMobileService.DataAccess.Entities" +
        "")]
    [System.SerializableAttribute()]
    public partial class NewEquipmentEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _creationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _customerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long _customerAutoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.EquipmentDetails[] _detailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long _equipmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.UndercarriageInspectionEntity _equipmentInspectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _examinerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _familyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] _imageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int _imageResField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int _isNewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _jobsiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long _jobsiteAutoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] _locationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _modelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long _modelAutoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _serialnoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _smuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string _unitnoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _creationDate {
            get {
                return this._creationDateField;
            }
            set {
                if ((object.ReferenceEquals(this._creationDateField, value) != true)) {
                    this._creationDateField = value;
                    this.RaisePropertyChanged("_creationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _customer {
            get {
                return this._customerField;
            }
            set {
                if ((object.ReferenceEquals(this._customerField, value) != true)) {
                    this._customerField = value;
                    this.RaisePropertyChanged("_customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long _customerAuto {
            get {
                return this._customerAutoField;
            }
            set {
                if ((this._customerAutoField.Equals(value) != true)) {
                    this._customerAutoField = value;
                    this.RaisePropertyChanged("_customerAuto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.EquipmentDetails[] _details {
            get {
                return this._detailsField;
            }
            set {
                if ((object.ReferenceEquals(this._detailsField, value) != true)) {
                    this._detailsField = value;
                    this.RaisePropertyChanged("_details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long _equipmentId {
            get {
                return this._equipmentIdField;
            }
            set {
                if ((this._equipmentIdField.Equals(value) != true)) {
                    this._equipmentIdField = value;
                    this.RaisePropertyChanged("_equipmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.UndercarriageInspectionEntity _equipmentInspection {
            get {
                return this._equipmentInspectionField;
            }
            set {
                if ((object.ReferenceEquals(this._equipmentInspectionField, value) != true)) {
                    this._equipmentInspectionField = value;
                    this.RaisePropertyChanged("_equipmentInspection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _examiner {
            get {
                return this._examinerField;
            }
            set {
                if ((object.ReferenceEquals(this._examinerField, value) != true)) {
                    this._examinerField = value;
                    this.RaisePropertyChanged("_examiner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _family {
            get {
                return this._familyField;
            }
            set {
                if ((object.ReferenceEquals(this._familyField, value) != true)) {
                    this._familyField = value;
                    this.RaisePropertyChanged("_family");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] _image {
            get {
                return this._imageField;
            }
            set {
                if ((object.ReferenceEquals(this._imageField, value) != true)) {
                    this._imageField = value;
                    this.RaisePropertyChanged("_image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _imageRes {
            get {
                return this._imageResField;
            }
            set {
                if ((this._imageResField.Equals(value) != true)) {
                    this._imageResField = value;
                    this.RaisePropertyChanged("_imageRes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int _isNew {
            get {
                return this._isNewField;
            }
            set {
                if ((this._isNewField.Equals(value) != true)) {
                    this._isNewField = value;
                    this.RaisePropertyChanged("_isNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _jobsite {
            get {
                return this._jobsiteField;
            }
            set {
                if ((object.ReferenceEquals(this._jobsiteField, value) != true)) {
                    this._jobsiteField = value;
                    this.RaisePropertyChanged("_jobsite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long _jobsiteAuto {
            get {
                return this._jobsiteAutoField;
            }
            set {
                if ((this._jobsiteAutoField.Equals(value) != true)) {
                    this._jobsiteAutoField = value;
                    this.RaisePropertyChanged("_jobsiteAuto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] _location {
            get {
                return this._locationField;
            }
            set {
                if ((object.ReferenceEquals(this._locationField, value) != true)) {
                    this._locationField = value;
                    this.RaisePropertyChanged("_location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _model {
            get {
                return this._modelField;
            }
            set {
                if ((object.ReferenceEquals(this._modelField, value) != true)) {
                    this._modelField = value;
                    this.RaisePropertyChanged("_model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long _modelAuto {
            get {
                return this._modelAutoField;
            }
            set {
                if ((this._modelAutoField.Equals(value) != true)) {
                    this._modelAutoField = value;
                    this.RaisePropertyChanged("_modelAuto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _serialno {
            get {
                return this._serialnoField;
            }
            set {
                if ((object.ReferenceEquals(this._serialnoField, value) != true)) {
                    this._serialnoField = value;
                    this.RaisePropertyChanged("_serialno");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _smu {
            get {
                return this._smuField;
            }
            set {
                if ((object.ReferenceEquals(this._smuField, value) != true)) {
                    this._smuField = value;
                    this.RaisePropertyChanged("_smu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _status {
            get {
                return this._statusField;
            }
            set {
                if ((object.ReferenceEquals(this._statusField, value) != true)) {
                    this._statusField = value;
                    this.RaisePropertyChanged("_status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string _unitno {
            get {
                return this._unitnoField;
            }
            set {
                if ((object.ReferenceEquals(this._unitnoField, value) != true)) {
                    this._unitnoField = value;
                    this.RaisePropertyChanged("_unitno");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EquipmentDetails", Namespace="http://schemas.datacontract.org/2004/07/InfoTrakMobileService.DataAccess.Entities" +
        "")]
    [System.SerializableAttribute()]
    public partial class EquipmentDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CompTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CompartIdAutoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompartidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EquipmentidAutoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long EqunitAutoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlangeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InspectionImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReadingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToolField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CompType {
            get {
                return this.CompTypeField;
            }
            set {
                if ((this.CompTypeField.Equals(value) != true)) {
                    this.CompTypeField = value;
                    this.RaisePropertyChanged("CompType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Compart {
            get {
                return this.CompartField;
            }
            set {
                if ((object.ReferenceEquals(this.CompartField, value) != true)) {
                    this.CompartField = value;
                    this.RaisePropertyChanged("Compart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long CompartIdAuto {
            get {
                return this.CompartIdAutoField;
            }
            set {
                if ((this.CompartIdAutoField.Equals(value) != true)) {
                    this.CompartIdAutoField = value;
                    this.RaisePropertyChanged("CompartIdAuto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Compartid {
            get {
                return this.CompartidField;
            }
            set {
                if ((object.ReferenceEquals(this.CompartidField, value) != true)) {
                    this.CompartidField = value;
                    this.RaisePropertyChanged("Compartid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EquipmentidAuto {
            get {
                return this.EquipmentidAutoField;
            }
            set {
                if ((this.EquipmentidAutoField.Equals(value) != true)) {
                    this.EquipmentidAutoField = value;
                    this.RaisePropertyChanged("EquipmentidAuto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long EqunitAuto {
            get {
                return this.EqunitAutoField;
            }
            set {
                if ((this.EqunitAutoField.Equals(value) != true)) {
                    this.EqunitAutoField = value;
                    this.RaisePropertyChanged("EqunitAuto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlangeType {
            get {
                return this.FlangeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FlangeTypeField, value) != true)) {
                    this.FlangeTypeField = value;
                    this.RaisePropertyChanged("FlangeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InspectionImage {
            get {
                return this.InspectionImageField;
            }
            set {
                if ((object.ReferenceEquals(this.InspectionImageField, value) != true)) {
                    this.InspectionImageField = value;
                    this.RaisePropertyChanged("InspectionImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Method {
            get {
                return this.MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodField, value) != true)) {
                    this.MethodField = value;
                    this.RaisePropertyChanged("Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Pos {
            get {
                return this.PosField;
            }
            set {
                if ((this.PosField.Equals(value) != true)) {
                    this.PosField = value;
                    this.RaisePropertyChanged("Pos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reading {
            get {
                return this.ReadingField;
            }
            set {
                if ((object.ReferenceEquals(this.ReadingField, value) != true)) {
                    this.ReadingField = value;
                    this.RaisePropertyChanged("Reading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Side {
            get {
                return this.SideField;
            }
            set {
                if ((object.ReferenceEquals(this.SideField, value) != true)) {
                    this.SideField = value;
                    this.RaisePropertyChanged("Side");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tool {
            get {
                return this.ToolField;
            }
            set {
                if ((object.ReferenceEquals(this.ToolField, value) != true)) {
                    this.ToolField = value;
                    this.RaisePropertyChanged("Tool");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EquipmentInspectionListEntity", Namespace="http://schemas.datacontract.org/2004/07/InfoTrakMobileService.DataAccess.Entities" +
        "")]
    [System.SerializableAttribute()]
    public partial class EquipmentInspectionListEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EquipmentsCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.UndercarriageInspectionEntity[] EquipmentsInspectionsListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ConsoleApplication1.ServiceReference1.NewEquipmentEntity[] NewEquipmentsInspectionsListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EquipmentsCount {
            get {
                return this.EquipmentsCountField;
            }
            set {
                if ((this.EquipmentsCountField.Equals(value) != true)) {
                    this.EquipmentsCountField = value;
                    this.RaisePropertyChanged("EquipmentsCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.UndercarriageInspectionEntity[] EquipmentsInspectionsList {
            get {
                return this.EquipmentsInspectionsListField;
            }
            set {
                if ((object.ReferenceEquals(this.EquipmentsInspectionsListField, value) != true)) {
                    this.EquipmentsInspectionsListField = value;
                    this.RaisePropertyChanged("EquipmentsInspectionsList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ConsoleApplication1.ServiceReference1.NewEquipmentEntity[] NewEquipmentsInspectionsList {
            get {
                return this.NewEquipmentsInspectionsListField;
            }
            set {
                if ((object.ReferenceEquals(this.NewEquipmentsInspectionsListField, value) != true)) {
                    this.NewEquipmentsInspectionsListField = value;
                    this.RaisePropertyChanged("NewEquipmentsInspectionsList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMobileService")]
    public interface IMobileService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetCustomerList", ReplyAction="http://tempuri.org/IMobileService/GetCustomerListResponse")]
        ConsoleApplication1.ServiceReference1.CustomerEntity[] GetCustomerList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetCustomerList", ReplyAction="http://tempuri.org/IMobileService/GetCustomerListResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.CustomerEntity[]> GetCustomerListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetJobsitesByCustomer", ReplyAction="http://tempuri.org/IMobileService/GetJobsitesByCustomerResponse")]
        ConsoleApplication1.ServiceReference1.JobsiteEntity[] GetJobsitesByCustomer(long customerAuto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetJobsitesByCustomer", ReplyAction="http://tempuri.org/IMobileService/GetJobsitesByCustomerResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.JobsiteEntity[]> GetJobsitesByCustomerAsync(long customerAuto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetModelsByJobsite", ReplyAction="http://tempuri.org/IMobileService/GetModelsByJobsiteResponse")]
        ConsoleApplication1.ServiceReference1.ModelEntity[] GetModelsByJobsite(long jobsiteAuto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetModelsByJobsite", ReplyAction="http://tempuri.org/IMobileService/GetModelsByJobsiteResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.ModelEntity[]> GetModelsByJobsiteAsync(long jobsiteAuto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetEquipmentByJobsiteAndModel", ReplyAction="http://tempuri.org/IMobileService/GetEquipmentByJobsiteAndModelResponse")]
        ConsoleApplication1.ServiceReference1.EquipmentEntity[] GetEquipmentByJobsiteAndModel(long jobsiteAuto, int modelAuto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetEquipmentByJobsiteAndModel", ReplyAction="http://tempuri.org/IMobileService/GetEquipmentByJobsiteAndModelResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.EquipmentEntity[]> GetEquipmentByJobsiteAndModelAsync(long jobsiteAuto, int modelAuto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetSelectedEquipment", ReplyAction="http://tempuri.org/IMobileService/GetSelectedEquipmentResponse")]
        ConsoleApplication1.ServiceReference1.EquipmentEntity[] GetSelectedEquipment(string equipmentList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetSelectedEquipment", ReplyAction="http://tempuri.org/IMobileService/GetSelectedEquipmentResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.EquipmentEntity[]> GetSelectedEquipmentAsync(string equipmentList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetSelectedComponents", ReplyAction="http://tempuri.org/IMobileService/GetSelectedComponentsResponse")]
        ConsoleApplication1.ServiceReference1.ComponentEntity[] GetSelectedComponents(string equipmentList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetSelectedComponents", ReplyAction="http://tempuri.org/IMobileService/GetSelectedComponentsResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.ComponentEntity[]> GetSelectedComponentsAsync(string equipmentList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetTestPointImages", ReplyAction="http://tempuri.org/IMobileService/GetTestPointImagesResponse")]
        ConsoleApplication1.ServiceReference1.TestPointImageEntity[] GetTestPointImages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetTestPointImages", ReplyAction="http://tempuri.org/IMobileService/GetTestPointImagesResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.TestPointImageEntity[]> GetTestPointImagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetUCLimits", ReplyAction="http://tempuri.org/IMobileService/GetUCLimitsResponse")]
        ConsoleApplication1.ServiceReference1.LimitsEntity[] GetUCLimits();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetUCLimits", ReplyAction="http://tempuri.org/IMobileService/GetUCLimitsResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.LimitsEntity[]> GetUCLimitsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetDealershipLimits", ReplyAction="http://tempuri.org/IMobileService/GetDealershipLimitsResponse")]
        ConsoleApplication1.ServiceReference1.DealershipLimitEntity[] GetDealershipLimits();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetDealershipLimits", ReplyAction="http://tempuri.org/IMobileService/GetDealershipLimitsResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.DealershipLimitEntity[]> GetDealershipLimitsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/SaveUcInspection", ReplyAction="http://tempuri.org/IMobileService/SaveUcInspectionResponse")]
        bool SaveUcInspection(ConsoleApplication1.ServiceReference1.UndercarriageInspectionEntity inspection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/SaveUcInspection", ReplyAction="http://tempuri.org/IMobileService/SaveUcInspectionResponse")]
        System.Threading.Tasks.Task<bool> SaveUcInspectionAsync(ConsoleApplication1.ServiceReference1.UndercarriageInspectionEntity inspection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/AuthenticateUser", ReplyAction="http://tempuri.org/IMobileService/AuthenticateUserResponse")]
        bool AuthenticateUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/AuthenticateUser", ReplyAction="http://tempuri.org/IMobileService/AuthenticateUserResponse")]
        System.Threading.Tasks.Task<bool> AuthenticateUserAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetUserPreference", ReplyAction="http://tempuri.org/IMobileService/GetUserPreferenceResponse")]
        ConsoleApplication1.ServiceReference1.UserPreferenceEntity GetUserPreference(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetUserPreference", ReplyAction="http://tempuri.org/IMobileService/GetUserPreferenceResponse")]
        System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.UserPreferenceEntity> GetUserPreferenceAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/SaveEquipment", ReplyAction="http://tempuri.org/IMobileService/SaveEquipmentResponse")]
        bool SaveEquipment(ConsoleApplication1.ServiceReference1.NewEquipmentEntity equipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/SaveEquipment", ReplyAction="http://tempuri.org/IMobileService/SaveEquipmentResponse")]
        System.Threading.Tasks.Task<bool> SaveEquipmentAsync(ConsoleApplication1.ServiceReference1.NewEquipmentEntity equipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/SaveInspectionForNewEquipment", ReplyAction="http://tempuri.org/IMobileService/SaveInspectionForNewEquipmentResponse")]
        bool SaveInspectionForNewEquipment(ConsoleApplication1.ServiceReference1.UndercarriageInspectionEntity inspection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/SaveInspectionForNewEquipment", ReplyAction="http://tempuri.org/IMobileService/SaveInspectionForNewEquipmentResponse")]
        System.Threading.Tasks.Task<bool> SaveInspectionForNewEquipmentAsync(ConsoleApplication1.ServiceReference1.UndercarriageInspectionEntity inspection);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetEquipmentIdBySerialAndUnit", ReplyAction="http://tempuri.org/IMobileService/GetEquipmentIdBySerialAndUnitResponse")]
        long GetEquipmentIdBySerialAndUnit(string serial, string unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/GetEquipmentIdBySerialAndUnit", ReplyAction="http://tempuri.org/IMobileService/GetEquipmentIdBySerialAndUnitResponse")]
        System.Threading.Tasks.Task<long> GetEquipmentIdBySerialAndUnitAsync(string serial, string unit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/SaveEquipmentsInspectionsData", ReplyAction="http://tempuri.org/IMobileService/SaveEquipmentsInspectionsDataResponse")]
        string SaveEquipmentsInspectionsData(ConsoleApplication1.ServiceReference1.EquipmentInspectionListEntity EquipList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMobileService/SaveEquipmentsInspectionsData", ReplyAction="http://tempuri.org/IMobileService/SaveEquipmentsInspectionsDataResponse")]
        System.Threading.Tasks.Task<string> SaveEquipmentsInspectionsDataAsync(ConsoleApplication1.ServiceReference1.EquipmentInspectionListEntity EquipList);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMobileServiceChannel : ConsoleApplication1.ServiceReference1.IMobileService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MobileServiceClient : System.ServiceModel.ClientBase<ConsoleApplication1.ServiceReference1.IMobileService>, ConsoleApplication1.ServiceReference1.IMobileService {
        
        public MobileServiceClient() {
        }
        
        public MobileServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MobileServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MobileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MobileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ConsoleApplication1.ServiceReference1.CustomerEntity[] GetCustomerList() {
            return base.Channel.GetCustomerList();
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.CustomerEntity[]> GetCustomerListAsync() {
            return base.Channel.GetCustomerListAsync();
        }
        
        public ConsoleApplication1.ServiceReference1.JobsiteEntity[] GetJobsitesByCustomer(long customerAuto) {
            return base.Channel.GetJobsitesByCustomer(customerAuto);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.JobsiteEntity[]> GetJobsitesByCustomerAsync(long customerAuto) {
            return base.Channel.GetJobsitesByCustomerAsync(customerAuto);
        }
        
        public ConsoleApplication1.ServiceReference1.ModelEntity[] GetModelsByJobsite(long jobsiteAuto) {
            return base.Channel.GetModelsByJobsite(jobsiteAuto);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.ModelEntity[]> GetModelsByJobsiteAsync(long jobsiteAuto) {
            return base.Channel.GetModelsByJobsiteAsync(jobsiteAuto);
        }
        
        public ConsoleApplication1.ServiceReference1.EquipmentEntity[] GetEquipmentByJobsiteAndModel(long jobsiteAuto, int modelAuto) {
            return base.Channel.GetEquipmentByJobsiteAndModel(jobsiteAuto, modelAuto);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.EquipmentEntity[]> GetEquipmentByJobsiteAndModelAsync(long jobsiteAuto, int modelAuto) {
            return base.Channel.GetEquipmentByJobsiteAndModelAsync(jobsiteAuto, modelAuto);
        }
        
        public ConsoleApplication1.ServiceReference1.EquipmentEntity[] GetSelectedEquipment(string equipmentList) {
            return base.Channel.GetSelectedEquipment(equipmentList);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.EquipmentEntity[]> GetSelectedEquipmentAsync(string equipmentList) {
            return base.Channel.GetSelectedEquipmentAsync(equipmentList);
        }
        
        public ConsoleApplication1.ServiceReference1.ComponentEntity[] GetSelectedComponents(string equipmentList) {
            return base.Channel.GetSelectedComponents(equipmentList);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.ComponentEntity[]> GetSelectedComponentsAsync(string equipmentList) {
            return base.Channel.GetSelectedComponentsAsync(equipmentList);
        }
        
        public ConsoleApplication1.ServiceReference1.TestPointImageEntity[] GetTestPointImages() {
            return base.Channel.GetTestPointImages();
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.TestPointImageEntity[]> GetTestPointImagesAsync() {
            return base.Channel.GetTestPointImagesAsync();
        }
        
        public ConsoleApplication1.ServiceReference1.LimitsEntity[] GetUCLimits() {
            return base.Channel.GetUCLimits();
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.LimitsEntity[]> GetUCLimitsAsync() {
            return base.Channel.GetUCLimitsAsync();
        }
        
        public ConsoleApplication1.ServiceReference1.DealershipLimitEntity[] GetDealershipLimits() {
            return base.Channel.GetDealershipLimits();
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.DealershipLimitEntity[]> GetDealershipLimitsAsync() {
            return base.Channel.GetDealershipLimitsAsync();
        }
        
        public bool SaveUcInspection(ConsoleApplication1.ServiceReference1.UndercarriageInspectionEntity inspection) {
            return base.Channel.SaveUcInspection(inspection);
        }
        
        public System.Threading.Tasks.Task<bool> SaveUcInspectionAsync(ConsoleApplication1.ServiceReference1.UndercarriageInspectionEntity inspection) {
            return base.Channel.SaveUcInspectionAsync(inspection);
        }
        
        public bool AuthenticateUser(string username, string password) {
            return base.Channel.AuthenticateUser(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> AuthenticateUserAsync(string username, string password) {
            return base.Channel.AuthenticateUserAsync(username, password);
        }
        
        public ConsoleApplication1.ServiceReference1.UserPreferenceEntity GetUserPreference(string userId) {
            return base.Channel.GetUserPreference(userId);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication1.ServiceReference1.UserPreferenceEntity> GetUserPreferenceAsync(string userId) {
            return base.Channel.GetUserPreferenceAsync(userId);
        }
        
        public bool SaveEquipment(ConsoleApplication1.ServiceReference1.NewEquipmentEntity equipment) {
            return base.Channel.SaveEquipment(equipment);
        }
        
        public System.Threading.Tasks.Task<bool> SaveEquipmentAsync(ConsoleApplication1.ServiceReference1.NewEquipmentEntity equipment) {
            return base.Channel.SaveEquipmentAsync(equipment);
        }
        
        public bool SaveInspectionForNewEquipment(ConsoleApplication1.ServiceReference1.UndercarriageInspectionEntity inspection) {
            return base.Channel.SaveInspectionForNewEquipment(inspection);
        }
        
        public System.Threading.Tasks.Task<bool> SaveInspectionForNewEquipmentAsync(ConsoleApplication1.ServiceReference1.UndercarriageInspectionEntity inspection) {
            return base.Channel.SaveInspectionForNewEquipmentAsync(inspection);
        }
        
        public long GetEquipmentIdBySerialAndUnit(string serial, string unit) {
            return base.Channel.GetEquipmentIdBySerialAndUnit(serial, unit);
        }
        
        public System.Threading.Tasks.Task<long> GetEquipmentIdBySerialAndUnitAsync(string serial, string unit) {
            return base.Channel.GetEquipmentIdBySerialAndUnitAsync(serial, unit);
        }
        
        public string SaveEquipmentsInspectionsData(ConsoleApplication1.ServiceReference1.EquipmentInspectionListEntity EquipList) {
            return base.Channel.SaveEquipmentsInspectionsData(EquipList);
        }
        
        public System.Threading.Tasks.Task<string> SaveEquipmentsInspectionsDataAsync(ConsoleApplication1.ServiceReference1.EquipmentInspectionListEntity EquipList) {
            return base.Channel.SaveEquipmentsInspectionsDataAsync(EquipList);
        }
    }
}
