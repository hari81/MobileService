//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InfoTrakMobileService.DataAccess.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Data.Entity.Core.Objects.DataClasses;
    using System.Linq;
    
    public partial class InfoTrakDataEntities : DbContext
    {
        public InfoTrakDataEntities()
            : base("name=InfoTrakDataEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<CRSF> CRSFs { get; set; }
        public DbSet<CUSTOMER> CUSTOMERs { get; set; }
        public DbSet<EQUIPMENT> EQUIPMENTs { get; set; }
        public DbSet<MODEL> MODELs { get; set; }
        public DbSet<LU_MMTA> LU_MMTA { get; set; }
        public DbSet<TYPE> TYPEs { get; set; }
        public DbSet<LINK_LOCATION> LINK_LOCATION { get; set; }
        public DbSet<GENERAL_EQ_UNIT> GENERAL_EQ_UNIT { get; set; }
        public DbSet<LU_COMPART> LU_COMPART { get; set; }
        public DbSet<LU_COMPART_TYPE> LU_COMPART_TYPE { get; set; }
        public DbSet<LU_SYSTEM> LU_SYSTEM { get; set; }
        public DbSet<COMPART_ATTACH_FILESTREAM> COMPART_ATTACH_FILESTREAM { get; set; }
        public DbSet<COMPART_ATTACH_TYPE> COMPART_ATTACH_TYPE { get; set; }
        public DbSet<TRACK_TOOL> TRACK_TOOL { get; set; }
        public DbSet<TRACK_COMPART_EXT> TRACK_COMPART_EXT { get; set; }
        public DbSet<TRACK_COMPART_WORN_CALC_METHOD> TRACK_COMPART_WORN_CALC_METHOD { get; set; }
        public DbSet<USER_TABLE> USER_TABLE { get; set; }
        public DbSet<TRACK_DEALERSHIP_LIMITS> TRACK_DEALERSHIP_LIMITS { get; set; }
        public DbSet<Mbl_CompartAttach_filestream> Mbl_CompartAttach_filestream { get; set; }
        public DbSet<Mbl_NewEquipment> Mbl_NewEquipment { get; set; }
        public DbSet<Mbl_NewGENERAL_EQ_UNIT> Mbl_NewGENERAL_EQ_UNIT { get; set; }
        public DbSet<Mbl_Track_Inspection> Mbl_Track_Inspection { get; set; }
        public DbSet<Mbl_Track_Inspection_Detail> Mbl_Track_Inspection_Detail { get; set; }
        public DbSet<APPLICATION_LU_CONFIG> APPLICATION_LU_CONFIG { get; set; }
        public DbSet<LU_Module_Sub> LU_Module_Sub { get; set; }
        public DbSet<GET> GETs { get; set; }
        public DbSet<GET_IMPLEMENT_MAKE_MODEL> GET_IMPLEMENT_MAKE_MODEL { get; set; }
        public DbSet<LU_IMPLEMENT> LU_IMPLEMENT { get; set; }
        public DbSet<MAKE> MAKEs { get; set; }
    
        public virtual ObjectResult<LimitsForEquipmentResult> GetLimitsForEquipment(Nullable<long> model_auto, Nullable<long> make_auto, Nullable<int> compart_type_auto, Nullable<int> compartid_auto, Nullable<int> track_tool_auto, Nullable<int> calc_method, Nullable<long> equipmentid_auto)
        {
            var model_autoParameter = model_auto.HasValue ?
                new ObjectParameter("model_auto", model_auto) :
                new ObjectParameter("model_auto", typeof(long));
    
            var make_autoParameter = make_auto.HasValue ?
                new ObjectParameter("make_auto", make_auto) :
                new ObjectParameter("make_auto", typeof(long));
    
            var compart_type_autoParameter = compart_type_auto.HasValue ?
                new ObjectParameter("compart_type_auto", compart_type_auto) :
                new ObjectParameter("compart_type_auto", typeof(int));
    
            var compartid_autoParameter = compartid_auto.HasValue ?
                new ObjectParameter("compartid_auto", compartid_auto) :
                new ObjectParameter("compartid_auto", typeof(int));
    
            var track_tool_autoParameter = track_tool_auto.HasValue ?
                new ObjectParameter("track_tool_auto", track_tool_auto) :
                new ObjectParameter("track_tool_auto", typeof(int));
    
            var calc_methodParameter = calc_method.HasValue ?
                new ObjectParameter("calc_method", calc_method) :
                new ObjectParameter("calc_method", typeof(int));
    
            var equipmentid_autoParameter = equipmentid_auto.HasValue ?
                new ObjectParameter("equipmentid_auto", equipmentid_auto) :
                new ObjectParameter("equipmentid_auto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LimitsForEquipmentResult>("GetLimitsForEquipment", model_autoParameter, make_autoParameter, compart_type_autoParameter, compartid_autoParameter, track_tool_autoParameter, calc_methodParameter, equipmentid_autoParameter);
        }
    
        public virtual int StoreTrackInspection(ObjectParameter inspection_auto, Nullable<long> equipmentid_auto, string examiner, Nullable<System.DateTime> inspection_date, Nullable<int> smu, Nullable<int> ltd, string notes, Nullable<decimal> track_sag_left, Nullable<decimal> track_sag_right, string track_sag_left_status, string track_sag_right_status, Nullable<decimal> dry_joints_left, Nullable<decimal> dry_joints_right, Nullable<decimal> ext_cannon_left, Nullable<decimal> ext_cannon_right, Nullable<decimal> frame_ext_left, Nullable<decimal> frame_ext_right, string sprocket_left_status, string sprocket_right_status, Nullable<short> impact, Nullable<short> abrasive, Nullable<short> moisture, Nullable<short> packing, Nullable<System.DateTime> created_date, string created_user, Nullable<System.DateTime> confirmed_date, string confirmed_user, string evalcode, Nullable<short> allowableWear, string uccode, string uccodedesc, Nullable<System.DateTime> last_interp_date, string last_interp_user, string eval_comment, string location, string docket_no, string ucbrand, Nullable<byte> wear, string inspectionComments, string jobsiteComments)
        {
            var equipmentid_autoParameter = equipmentid_auto.HasValue ?
                new ObjectParameter("equipmentid_auto", equipmentid_auto) :
                new ObjectParameter("equipmentid_auto", typeof(long));
    
            var examinerParameter = examiner != null ?
                new ObjectParameter("examiner", examiner) :
                new ObjectParameter("examiner", typeof(string));
    
            var inspection_dateParameter = inspection_date.HasValue ?
                new ObjectParameter("inspection_date", inspection_date) :
                new ObjectParameter("inspection_date", typeof(System.DateTime));
    
            var smuParameter = smu.HasValue ?
                new ObjectParameter("smu", smu) :
                new ObjectParameter("smu", typeof(int));
    
            var ltdParameter = ltd.HasValue ?
                new ObjectParameter("ltd", ltd) :
                new ObjectParameter("ltd", typeof(int));
    
            var notesParameter = notes != null ?
                new ObjectParameter("notes", notes) :
                new ObjectParameter("notes", typeof(string));
    
            var track_sag_leftParameter = track_sag_left.HasValue ?
                new ObjectParameter("track_sag_left", track_sag_left) :
                new ObjectParameter("track_sag_left", typeof(decimal));
    
            var track_sag_rightParameter = track_sag_right.HasValue ?
                new ObjectParameter("track_sag_right", track_sag_right) :
                new ObjectParameter("track_sag_right", typeof(decimal));
    
            var track_sag_left_statusParameter = track_sag_left_status != null ?
                new ObjectParameter("track_sag_left_status", track_sag_left_status) :
                new ObjectParameter("track_sag_left_status", typeof(string));
    
            var track_sag_right_statusParameter = track_sag_right_status != null ?
                new ObjectParameter("track_sag_right_status", track_sag_right_status) :
                new ObjectParameter("track_sag_right_status", typeof(string));
    
            var dry_joints_leftParameter = dry_joints_left.HasValue ?
                new ObjectParameter("dry_joints_left", dry_joints_left) :
                new ObjectParameter("dry_joints_left", typeof(decimal));
    
            var dry_joints_rightParameter = dry_joints_right.HasValue ?
                new ObjectParameter("dry_joints_right", dry_joints_right) :
                new ObjectParameter("dry_joints_right", typeof(decimal));
    
            var ext_cannon_leftParameter = ext_cannon_left.HasValue ?
                new ObjectParameter("ext_cannon_left", ext_cannon_left) :
                new ObjectParameter("ext_cannon_left", typeof(decimal));
    
            var ext_cannon_rightParameter = ext_cannon_right.HasValue ?
                new ObjectParameter("ext_cannon_right", ext_cannon_right) :
                new ObjectParameter("ext_cannon_right", typeof(decimal));
    
            var frame_ext_leftParameter = frame_ext_left.HasValue ?
                new ObjectParameter("frame_ext_left", frame_ext_left) :
                new ObjectParameter("frame_ext_left", typeof(decimal));
    
            var frame_ext_rightParameter = frame_ext_right.HasValue ?
                new ObjectParameter("frame_ext_right", frame_ext_right) :
                new ObjectParameter("frame_ext_right", typeof(decimal));
    
            var sprocket_left_statusParameter = sprocket_left_status != null ?
                new ObjectParameter("sprocket_left_status", sprocket_left_status) :
                new ObjectParameter("sprocket_left_status", typeof(string));
    
            var sprocket_right_statusParameter = sprocket_right_status != null ?
                new ObjectParameter("sprocket_right_status", sprocket_right_status) :
                new ObjectParameter("sprocket_right_status", typeof(string));
    
            var impactParameter = impact.HasValue ?
                new ObjectParameter("impact", impact) :
                new ObjectParameter("impact", typeof(short));
    
            var abrasiveParameter = abrasive.HasValue ?
                new ObjectParameter("abrasive", abrasive) :
                new ObjectParameter("abrasive", typeof(short));
    
            var moistureParameter = moisture.HasValue ?
                new ObjectParameter("moisture", moisture) :
                new ObjectParameter("moisture", typeof(short));
    
            var packingParameter = packing.HasValue ?
                new ObjectParameter("packing", packing) :
                new ObjectParameter("packing", typeof(short));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var created_userParameter = created_user != null ?
                new ObjectParameter("created_user", created_user) :
                new ObjectParameter("created_user", typeof(string));
    
            var confirmed_dateParameter = confirmed_date.HasValue ?
                new ObjectParameter("confirmed_date", confirmed_date) :
                new ObjectParameter("confirmed_date", typeof(System.DateTime));
    
            var confirmed_userParameter = confirmed_user != null ?
                new ObjectParameter("confirmed_user", confirmed_user) :
                new ObjectParameter("confirmed_user", typeof(string));
    
            var evalcodeParameter = evalcode != null ?
                new ObjectParameter("evalcode", evalcode) :
                new ObjectParameter("evalcode", typeof(string));
    
            var allowableWearParameter = allowableWear.HasValue ?
                new ObjectParameter("allowableWear", allowableWear) :
                new ObjectParameter("allowableWear", typeof(short));
    
            var uccodeParameter = uccode != null ?
                new ObjectParameter("uccode", uccode) :
                new ObjectParameter("uccode", typeof(string));
    
            var uccodedescParameter = uccodedesc != null ?
                new ObjectParameter("uccodedesc", uccodedesc) :
                new ObjectParameter("uccodedesc", typeof(string));
    
            var last_interp_dateParameter = last_interp_date.HasValue ?
                new ObjectParameter("last_interp_date", last_interp_date) :
                new ObjectParameter("last_interp_date", typeof(System.DateTime));
    
            var last_interp_userParameter = last_interp_user != null ?
                new ObjectParameter("last_interp_user", last_interp_user) :
                new ObjectParameter("last_interp_user", typeof(string));
    
            var eval_commentParameter = eval_comment != null ?
                new ObjectParameter("eval_comment", eval_comment) :
                new ObjectParameter("eval_comment", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            var docket_noParameter = docket_no != null ?
                new ObjectParameter("docket_no", docket_no) :
                new ObjectParameter("docket_no", typeof(string));
    
            var ucbrandParameter = ucbrand != null ?
                new ObjectParameter("ucbrand", ucbrand) :
                new ObjectParameter("ucbrand", typeof(string));
    
            var wearParameter = wear.HasValue ?
                new ObjectParameter("wear", wear) :
                new ObjectParameter("wear", typeof(byte));
    
            var inspectionCommentsParameter = inspectionComments != null ?
                new ObjectParameter("inspectionComments", inspectionComments) :
                new ObjectParameter("inspectionComments", typeof(string));
    
            var jobsiteCommentsParameter = jobsiteComments != null ?
                new ObjectParameter("jobsiteComments", jobsiteComments) :
                new ObjectParameter("jobsiteComments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StoreTrackInspection", inspection_auto, equipmentid_autoParameter, examinerParameter, inspection_dateParameter, smuParameter, ltdParameter, notesParameter, track_sag_leftParameter, track_sag_rightParameter, track_sag_left_statusParameter, track_sag_right_statusParameter, dry_joints_leftParameter, dry_joints_rightParameter, ext_cannon_leftParameter, ext_cannon_rightParameter, frame_ext_leftParameter, frame_ext_rightParameter, sprocket_left_statusParameter, sprocket_right_statusParameter, impactParameter, abrasiveParameter, moistureParameter, packingParameter, created_dateParameter, created_userParameter, confirmed_dateParameter, confirmed_userParameter, evalcodeParameter, allowableWearParameter, uccodeParameter, uccodedescParameter, last_interp_dateParameter, last_interp_userParameter, eval_commentParameter, locationParameter, docket_noParameter, ucbrandParameter, wearParameter, inspectionCommentsParameter, jobsiteCommentsParameter);
        }
    
        public virtual int StoreTrackInspectionDetail(ObjectParameter inspection_detail_auto, Nullable<int> inspection_auto, Nullable<long> track_unit_auto, Nullable<int> tool_auto, Nullable<decimal> reading, Nullable<decimal> worn_percentage, Nullable<decimal> worn_percentage_120, string eval_code, Nullable<int> hours_on_surface, Nullable<int> projected_hours, Nullable<int> ext_projected_hours, Nullable<int> remaining_hours, Nullable<int> ext_remaining_hours, string comments)
        {
            var inspection_autoParameter = inspection_auto.HasValue ?
                new ObjectParameter("inspection_auto", inspection_auto) :
                new ObjectParameter("inspection_auto", typeof(int));
    
            var track_unit_autoParameter = track_unit_auto.HasValue ?
                new ObjectParameter("track_unit_auto", track_unit_auto) :
                new ObjectParameter("track_unit_auto", typeof(long));
    
            var tool_autoParameter = tool_auto.HasValue ?
                new ObjectParameter("tool_auto", tool_auto) :
                new ObjectParameter("tool_auto", typeof(int));
    
            var readingParameter = reading.HasValue ?
                new ObjectParameter("reading", reading) :
                new ObjectParameter("reading", typeof(decimal));
    
            var worn_percentageParameter = worn_percentage.HasValue ?
                new ObjectParameter("worn_percentage", worn_percentage) :
                new ObjectParameter("worn_percentage", typeof(decimal));
    
            var worn_percentage_120Parameter = worn_percentage_120.HasValue ?
                new ObjectParameter("worn_percentage_120", worn_percentage_120) :
                new ObjectParameter("worn_percentage_120", typeof(decimal));
    
            var eval_codeParameter = eval_code != null ?
                new ObjectParameter("eval_code", eval_code) :
                new ObjectParameter("eval_code", typeof(string));
    
            var hours_on_surfaceParameter = hours_on_surface.HasValue ?
                new ObjectParameter("hours_on_surface", hours_on_surface) :
                new ObjectParameter("hours_on_surface", typeof(int));
    
            var projected_hoursParameter = projected_hours.HasValue ?
                new ObjectParameter("projected_hours", projected_hours) :
                new ObjectParameter("projected_hours", typeof(int));
    
            var ext_projected_hoursParameter = ext_projected_hours.HasValue ?
                new ObjectParameter("ext_projected_hours", ext_projected_hours) :
                new ObjectParameter("ext_projected_hours", typeof(int));
    
            var remaining_hoursParameter = remaining_hours.HasValue ?
                new ObjectParameter("remaining_hours", remaining_hours) :
                new ObjectParameter("remaining_hours", typeof(int));
    
            var ext_remaining_hoursParameter = ext_remaining_hours.HasValue ?
                new ObjectParameter("ext_remaining_hours", ext_remaining_hours) :
                new ObjectParameter("ext_remaining_hours", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StoreTrackInspectionDetail", inspection_detail_auto, inspection_autoParameter, track_unit_autoParameter, tool_autoParameter, readingParameter, worn_percentageParameter, worn_percentage_120Parameter, eval_codeParameter, hours_on_surfaceParameter, projected_hoursParameter, ext_projected_hoursParameter, remaining_hoursParameter, ext_remaining_hoursParameter, commentsParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetEquipmentLTD(Nullable<long> equipmentid_auto, Nullable<long> smu, Nullable<System.DateTime> reading_date)
        {
            var equipmentid_autoParameter = equipmentid_auto.HasValue ?
                new ObjectParameter("equipmentid_auto", equipmentid_auto) :
                new ObjectParameter("equipmentid_auto", typeof(long));
    
            var smuParameter = smu.HasValue ?
                new ObjectParameter("smu", smu) :
                new ObjectParameter("smu", typeof(long));
    
            var reading_dateParameter = reading_date.HasValue ?
                new ObjectParameter("reading_date", reading_date) :
                new ObjectParameter("reading_date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetEquipmentLTD", equipmentid_autoParameter, smuParameter, reading_dateParameter);
        }
    
        public virtual ObjectResult<GetByIDGENERAL_EQ_UNIT_Result> GetComponentById(Nullable<long> equnit_auto)
        {
            var equnit_autoParameter = equnit_auto.HasValue ?
                new ObjectParameter("equnit_auto", equnit_auto) :
                new ObjectParameter("equnit_auto", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetByIDGENERAL_EQ_UNIT_Result>("GetComponentById", equnit_autoParameter);
        }
    
        public virtual int UpdateTrackEval(ObjectParameter inspection_auto, Nullable<int> user_auto)
        {
            var user_autoParameter = user_auto.HasValue ?
                new ObjectParameter("user_auto", user_auto) :
                new ObjectParameter("user_auto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTrackEval", inspection_auto, user_autoParameter);
        }
    
        public virtual int StoreCompartAttachment(Nullable<long> compartid_auto, Nullable<int> compart_attach_type_auto, byte[] attachment, string file_name, Nullable<System.DateTime> created_date, Nullable<long> created_user, string comments, Nullable<int> inspection_auto, Nullable<long> comparttype_auto, Nullable<int> tool_auto, Nullable<int> position, Nullable<int> inspectionDetailId, ObjectParameter result)
        {
            var compartid_autoParameter = compartid_auto.HasValue ?
                new ObjectParameter("compartid_auto", compartid_auto) :
                new ObjectParameter("compartid_auto", typeof(long));
    
            var compart_attach_type_autoParameter = compart_attach_type_auto.HasValue ?
                new ObjectParameter("compart_attach_type_auto", compart_attach_type_auto) :
                new ObjectParameter("compart_attach_type_auto", typeof(int));
    
            var attachmentParameter = attachment != null ?
                new ObjectParameter("attachment", attachment) :
                new ObjectParameter("attachment", typeof(byte[]));
    
            var file_nameParameter = file_name != null ?
                new ObjectParameter("file_name", file_name) :
                new ObjectParameter("file_name", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var created_userParameter = created_user.HasValue ?
                new ObjectParameter("created_user", created_user) :
                new ObjectParameter("created_user", typeof(long));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var inspection_autoParameter = inspection_auto.HasValue ?
                new ObjectParameter("inspection_auto", inspection_auto) :
                new ObjectParameter("inspection_auto", typeof(int));
    
            var comparttype_autoParameter = comparttype_auto.HasValue ?
                new ObjectParameter("comparttype_auto", comparttype_auto) :
                new ObjectParameter("comparttype_auto", typeof(long));
    
            var tool_autoParameter = tool_auto.HasValue ?
                new ObjectParameter("tool_auto", tool_auto) :
                new ObjectParameter("tool_auto", typeof(int));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(int));
    
            var inspectionDetailIdParameter = inspectionDetailId.HasValue ?
                new ObjectParameter("inspectionDetailId", inspectionDetailId) :
                new ObjectParameter("inspectionDetailId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StoreCompartAttachment", compartid_autoParameter, compart_attach_type_autoParameter, attachmentParameter, file_nameParameter, created_dateParameter, created_userParameter, commentsParameter, inspection_autoParameter, comparttype_autoParameter, tool_autoParameter, positionParameter, inspectionDetailIdParameter, result);
        }
    
        public virtual int SaveEquipmentFromMobileService(ObjectParameter equip_auto, string serialNo, string unitNo, Nullable<long> crsfAuto, Nullable<long> smu, Nullable<long> modelAuto, Nullable<System.DateTime> createdDate, string createdUser, string customer_name, string jobsite_name, string model)
        {
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("serialNo", serialNo) :
                new ObjectParameter("serialNo", typeof(string));
    
            var unitNoParameter = unitNo != null ?
                new ObjectParameter("unitNo", unitNo) :
                new ObjectParameter("unitNo", typeof(string));
    
            var crsfAutoParameter = crsfAuto.HasValue ?
                new ObjectParameter("crsfAuto", crsfAuto) :
                new ObjectParameter("crsfAuto", typeof(long));
    
            var smuParameter = smu.HasValue ?
                new ObjectParameter("smu", smu) :
                new ObjectParameter("smu", typeof(long));
    
            var modelAutoParameter = modelAuto.HasValue ?
                new ObjectParameter("modelAuto", modelAuto) :
                new ObjectParameter("modelAuto", typeof(long));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("createdDate", createdDate) :
                new ObjectParameter("createdDate", typeof(System.DateTime));
    
            var createdUserParameter = createdUser != null ?
                new ObjectParameter("createdUser", createdUser) :
                new ObjectParameter("createdUser", typeof(string));
    
            var customer_nameParameter = customer_name != null ?
                new ObjectParameter("customer_name", customer_name) :
                new ObjectParameter("customer_name", typeof(string));
    
            var jobsite_nameParameter = jobsite_name != null ?
                new ObjectParameter("jobsite_name", jobsite_name) :
                new ObjectParameter("jobsite_name", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("model", model) :
                new ObjectParameter("model", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveEquipmentFromMobileService", equip_auto, serialNoParameter, unitNoParameter, crsfAutoParameter, smuParameter, modelAutoParameter, createdDateParameter, createdUserParameter, customer_nameParameter, jobsite_nameParameter, modelParameter);
        }
    
        public virtual int SaveEquipment(ObjectParameter equip_auto, string serialNo, string unitNo, Nullable<long> crsfAuto, Nullable<long> smu, Nullable<long> modelAuto, Nullable<System.DateTime> createdDate, string createdUser, string customer_name, string jobsite_name, string model, byte[] equipmentPhoto = null)
        {
            var serialNoParameter = serialNo != null ?
                new ObjectParameter("serialNo", serialNo) :
                new ObjectParameter("serialNo", typeof(string));
    
            var unitNoParameter = unitNo != null ?
                new ObjectParameter("unitNo", unitNo) :
                new ObjectParameter("unitNo", typeof(string));
    
            var crsfAutoParameter = crsfAuto.HasValue ?
                new ObjectParameter("crsfAuto", crsfAuto) :
                new ObjectParameter("crsfAuto", typeof(long));
    
            var smuParameter = smu.HasValue ?
                new ObjectParameter("smu", smu) :
                new ObjectParameter("smu", typeof(long));
    
            var modelAutoParameter = modelAuto.HasValue ?
                new ObjectParameter("modelAuto", modelAuto) :
                new ObjectParameter("modelAuto", typeof(long));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("createdDate", createdDate) :
                new ObjectParameter("createdDate", typeof(System.DateTime));
    
            var createdUserParameter = createdUser != null ?
                new ObjectParameter("createdUser", createdUser) :
                new ObjectParameter("createdUser", typeof(string));
    
            var customer_nameParameter = customer_name != null ?
                new ObjectParameter("customer_name", customer_name) :
                new ObjectParameter("customer_name", typeof(string));
    
            var jobsite_nameParameter = jobsite_name != null ?
                new ObjectParameter("jobsite_name", jobsite_name) :
                new ObjectParameter("jobsite_name", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("model", model) :
                new ObjectParameter("model", typeof(string));

            var equipmentPhotoParameter = new ObjectParameter("EquipmentPhoto", equipmentPhoto);

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveEquipment", equip_auto, serialNoParameter, unitNoParameter, crsfAutoParameter, smuParameter, modelAutoParameter, createdDateParameter, createdUserParameter, customer_nameParameter, jobsite_nameParameter, modelParameter, equipmentPhotoParameter);
        }
    
        public virtual int SaveEquipmentDetails(Nullable<long> equipmentid, Nullable<int> compartid_auto, Nullable<long> smu, Nullable<int> model_auto, Nullable<byte> pos, Nullable<byte> side, string compart_descr, Nullable<System.DateTime> createdDate, string createdUser, string compart, Nullable<long> comprtid)
        {
            var equipmentidParameter = equipmentid.HasValue ?
                new ObjectParameter("equipmentid", equipmentid) :
                new ObjectParameter("equipmentid", typeof(long));
    
            var compartid_autoParameter = compartid_auto.HasValue ?
                new ObjectParameter("compartid_auto", compartid_auto) :
                new ObjectParameter("compartid_auto", typeof(int));
    
            var smuParameter = smu.HasValue ?
                new ObjectParameter("smu", smu) :
                new ObjectParameter("smu", typeof(long));
    
            var model_autoParameter = model_auto.HasValue ?
                new ObjectParameter("model_auto", model_auto) :
                new ObjectParameter("model_auto", typeof(int));
    
            var posParameter = pos.HasValue ?
                new ObjectParameter("pos", pos) :
                new ObjectParameter("pos", typeof(byte));
    
            var sideParameter = side.HasValue ?
                new ObjectParameter("side", side) :
                new ObjectParameter("side", typeof(byte));
    
            var compart_descrParameter = compart_descr != null ?
                new ObjectParameter("compart_descr", compart_descr) :
                new ObjectParameter("compart_descr", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("createdDate", createdDate) :
                new ObjectParameter("createdDate", typeof(System.DateTime));
    
            var createdUserParameter = createdUser != null ?
                new ObjectParameter("createdUser", createdUser) :
                new ObjectParameter("createdUser", typeof(string));
    
            var compartParameter = compart != null ?
                new ObjectParameter("compart", compart) :
                new ObjectParameter("compart", typeof(string));
    
            var comprtidParameter = comprtid.HasValue ?
                new ObjectParameter("comprtid", comprtid) :
                new ObjectParameter("comprtid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveEquipmentDetails", equipmentidParameter, compartid_autoParameter, smuParameter, model_autoParameter, posParameter, sideParameter, compart_descrParameter, createdDateParameter, createdUserParameter, compartParameter, comprtidParameter);
        }
    
        public virtual int SaveComponentDetailsFromMobileService(Nullable<long> equipmentid, Nullable<int> compartid_auto, Nullable<long> smu, Nullable<int> model_auto, Nullable<byte> pos, Nullable<byte> side, string compart_descr, Nullable<System.DateTime> createdDate, string createdUser, string compart, Nullable<long> comprtid)
        {
            var equipmentidParameter = equipmentid.HasValue ?
                new ObjectParameter("equipmentid", equipmentid) :
                new ObjectParameter("equipmentid", typeof(long));
    
            var compartid_autoParameter = compartid_auto.HasValue ?
                new ObjectParameter("compartid_auto", compartid_auto) :
                new ObjectParameter("compartid_auto", typeof(int));
    
            var smuParameter = smu.HasValue ?
                new ObjectParameter("smu", smu) :
                new ObjectParameter("smu", typeof(long));
    
            var model_autoParameter = model_auto.HasValue ?
                new ObjectParameter("model_auto", model_auto) :
                new ObjectParameter("model_auto", typeof(int));
    
            var posParameter = pos.HasValue ?
                new ObjectParameter("pos", pos) :
                new ObjectParameter("pos", typeof(byte));
    
            var sideParameter = side.HasValue ?
                new ObjectParameter("side", side) :
                new ObjectParameter("side", typeof(byte));
    
            var compart_descrParameter = compart_descr != null ?
                new ObjectParameter("compart_descr", compart_descr) :
                new ObjectParameter("compart_descr", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("createdDate", createdDate) :
                new ObjectParameter("createdDate", typeof(System.DateTime));
    
            var createdUserParameter = createdUser != null ?
                new ObjectParameter("createdUser", createdUser) :
                new ObjectParameter("createdUser", typeof(string));
    
            var compartParameter = compart != null ?
                new ObjectParameter("compart", compart) :
                new ObjectParameter("compart", typeof(string));
    
            var comprtidParameter = comprtid.HasValue ?
                new ObjectParameter("comprtid", comprtid) :
                new ObjectParameter("comprtid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveComponentDetailsFromMobileService", equipmentidParameter, compartid_autoParameter, smuParameter, model_autoParameter, posParameter, sideParameter, compart_descrParameter, createdDateParameter, createdUserParameter, compartParameter, comprtidParameter);
        }
    
        public virtual int SaveInspectionDetailsForNewEquipment(Nullable<int> inspection_auto, Nullable<int> compartid, Nullable<decimal> reading, Nullable<int> tool_auto, string comments)
        {
            var inspection_autoParameter = inspection_auto.HasValue ?
                new ObjectParameter("inspection_auto", inspection_auto) :
                new ObjectParameter("inspection_auto", typeof(int));
    
            var compartidParameter = compartid.HasValue ?
                new ObjectParameter("compartid", compartid) :
                new ObjectParameter("compartid", typeof(int));
    
            var readingParameter = reading.HasValue ?
                new ObjectParameter("reading", reading) :
                new ObjectParameter("reading", typeof(decimal));
    
            var tool_autoParameter = tool_auto.HasValue ?
                new ObjectParameter("tool_auto", tool_auto) :
                new ObjectParameter("tool_auto", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveInspectionDetailsForNewEquipment", inspection_autoParameter, compartidParameter, readingParameter, tool_autoParameter, commentsParameter);
        }
    
        public virtual int SaveInspectionForNewEquipment(ObjectParameter inspection_auto, Nullable<long> equipmentid, Nullable<long> smu, Nullable<decimal> tracksagleft, Nullable<decimal> tracksagright, Nullable<decimal> dryjointleft, Nullable<decimal> dryjointright, Nullable<decimal> extcannonleft, Nullable<decimal> extcannonright, Nullable<short> impact, Nullable<short> abrasive, Nullable<short> moisture, Nullable<short> packing, string inspectioncomments, string jobsitecomments, Nullable<System.DateTime> createdDate, string createdUser,
        string leftTrackSagComment , string rightTrackSagComment , string leftCannonExtComment ,
        string rightCannonExtComment , string leftTrackSagImage , string rightTrackSagImage , string leftCannonExtImage ,
        string rightCannonExtImage, int travelHoursForward, int travelHoursReverse, decimal leftScallop, decimal rightScallop, bool travelledByKms )
        {
            var equipmentidParameter = equipmentid.HasValue ?
                new ObjectParameter("equipmentid", equipmentid) :
                new ObjectParameter("equipmentid", typeof(long));
    
            var smuParameter = smu.HasValue ?
                new ObjectParameter("smu", smu) :
                new ObjectParameter("smu", typeof(long));
    
            var tracksagleftParameter = tracksagleft.HasValue ?
                new ObjectParameter("tracksagleft", tracksagleft) :
                new ObjectParameter("tracksagleft", typeof(decimal));
    
            var tracksagrightParameter = tracksagright.HasValue ?
                new ObjectParameter("tracksagright", tracksagright) :
                new ObjectParameter("tracksagright", typeof(decimal));
    
            var dryjointleftParameter = dryjointleft.HasValue ?
                new ObjectParameter("dryjointleft", dryjointleft) :
                new ObjectParameter("dryjointleft", typeof(decimal));
    
            var dryjointrightParameter = dryjointright.HasValue ?
                new ObjectParameter("dryjointright", dryjointright) :
                new ObjectParameter("dryjointright", typeof(decimal));
    
            var extcannonleftParameter = extcannonleft.HasValue ?
                new ObjectParameter("extcannonleft", extcannonleft) :
                new ObjectParameter("extcannonleft", typeof(decimal));
    
            var extcannonrightParameter = extcannonright.HasValue ?
                new ObjectParameter("extcannonright", extcannonright) :
                new ObjectParameter("extcannonright", typeof(decimal));
    
            var impactParameter = impact.HasValue ?
                new ObjectParameter("impact", impact) :
                new ObjectParameter("impact", typeof(short));
    
            var abrasiveParameter = abrasive.HasValue ?
                new ObjectParameter("abrasive", abrasive) :
                new ObjectParameter("abrasive", typeof(short));
    
            var moistureParameter = moisture.HasValue ?
                new ObjectParameter("moisture", moisture) :
                new ObjectParameter("moisture", typeof(short));
    
            var packingParameter = packing.HasValue ?
                new ObjectParameter("packing", packing) :
                new ObjectParameter("packing", typeof(short));
    
            var inspectioncommentsParameter = inspectioncomments != null ?
                new ObjectParameter("inspectioncomments", inspectioncomments) :
                new ObjectParameter("inspectioncomments", typeof(string));
    
            var jobsitecommentsParameter = jobsitecomments != null ?
                new ObjectParameter("jobsitecomments", jobsitecomments) :
                new ObjectParameter("jobsitecomments", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("createdDate", createdDate) :
                new ObjectParameter("createdDate", typeof(System.DateTime));
    
            var createdUserParameter = createdUser != null ?
                new ObjectParameter("createdUser", createdUser) :
                new ObjectParameter("createdUser", typeof(string));

            var leftTrackSagCommentParameter = leftTrackSagComment != null ?
                new ObjectParameter("leftTrackSagComment", leftTrackSagComment) :
                new ObjectParameter("leftTrackSagComment", typeof(string));

            var rightTrackSagCommentParameter = rightTrackSagComment != null ?
                new ObjectParameter("rightTrackSagComment", rightTrackSagComment) :
                new ObjectParameter("rightTrackSagComment", typeof(string));

            var leftCannonExtCommentParameter = leftCannonExtComment != null ?
                new ObjectParameter("leftCannonExtComment", leftCannonExtComment) :
                new ObjectParameter("leftCannonExtComment", typeof(string));

            var rightCannonExtCommentParameter = rightCannonExtComment != null ?
                new ObjectParameter("rightCannonExtComment", rightCannonExtComment) :
                new ObjectParameter("rightCannonExtComment", typeof(string));

            byte[] leftTrackSagImageByte = null;
            byte[] rightTrackSagImageByte = null;
            byte[] leftCannonExtImageByte = null;
            byte[] rightCannonExtImageByte = null;

            try { leftTrackSagImageByte = Convert.FromBase64String(leftTrackSagImage); } catch { }
            try { rightTrackSagImageByte = Convert.FromBase64String(rightTrackSagImage); } catch { }
            try { leftCannonExtImageByte = Convert.FromBase64String(leftCannonExtImage); } catch { }
            try { rightCannonExtImageByte = Convert.FromBase64String(rightCannonExtImage); } catch { }

            var leftTrackSagImageParameter = leftTrackSagImageByte != null ?
                new ObjectParameter("leftTrackSagImage", leftTrackSagImageByte) :
                new ObjectParameter("leftTrackSagImage", typeof(byte[]));

            var rightTrackSagImageParameter = rightTrackSagImageByte != null ?
                new ObjectParameter("rightTrackSagImage", rightTrackSagImageByte) :
                new ObjectParameter("rightTrackSagImage", typeof(byte[]));

            var leftCannonExtImageParameter = leftCannonExtImageByte != null ?
                new ObjectParameter("leftCannonExtImage", leftCannonExtImageByte) :
                new ObjectParameter("leftCannonExtImage", typeof(byte[]));

            var rightCannonExtImageParameter = rightCannonExtImageByte != null ?
                new ObjectParameter("rightCannonExtImage", rightCannonExtImageByte) :
                new ObjectParameter("rightCannonExtImage", typeof(byte[]));

            var leftScallopParameter = new ObjectParameter("leftScallop", leftScallop);
            var rightScallopParameter = new ObjectParameter("rightScallop", rightScallop);

            var travelForwardParameter = new ObjectParameter("travelForward", travelHoursForward);
            var travelReverseParameter = new ObjectParameter("travelReverse", travelHoursReverse);

            var travelledByKmsParameter = new ObjectParameter("travelledKms", travelledByKms);

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveInspectionForNewEquipment", inspection_auto, equipmentidParameter, smuParameter, tracksagleftParameter, tracksagrightParameter, dryjointleftParameter, dryjointrightParameter, extcannonleftParameter, extcannonrightParameter, impactParameter, abrasiveParameter, moistureParameter, packingParameter, inspectioncommentsParameter, jobsitecommentsParameter, createdDateParameter, createdUserParameter,
                leftTrackSagCommentParameter, rightTrackSagCommentParameter, leftCannonExtCommentParameter,
                rightCannonExtCommentParameter, leftTrackSagImageParameter, rightTrackSagImageParameter, leftCannonExtImageParameter,
                rightCannonExtImageParameter, leftScallopParameter, rightScallopParameter, travelForwardParameter, travelReverseParameter, travelledByKmsParameter);
        }
    
        public virtual int StoreCompartAttachmentForNewEquip(Nullable<long> compartid_auto, Nullable<int> compart_attach_type_auto, byte[] attachment, string file_name, Nullable<System.DateTime> created_date, Nullable<long> created_user, string comments, Nullable<int> inspection_auto, Nullable<long> comparttype_auto, Nullable<int> tool_auto, Nullable<int> position, ObjectParameter result)
        {
            var compartid_autoParameter = compartid_auto.HasValue ?
                new ObjectParameter("compartid_auto", compartid_auto) :
                new ObjectParameter("compartid_auto", typeof(long));
    
            var compart_attach_type_autoParameter = compart_attach_type_auto.HasValue ?
                new ObjectParameter("compart_attach_type_auto", compart_attach_type_auto) :
                new ObjectParameter("compart_attach_type_auto", typeof(int));
    
            var attachmentParameter = attachment != null ?
                new ObjectParameter("attachment", attachment) :
                new ObjectParameter("attachment", typeof(byte[]));
    
            var file_nameParameter = file_name != null ?
                new ObjectParameter("file_name", file_name) :
                new ObjectParameter("file_name", typeof(string));
    
            var created_dateParameter = created_date.HasValue ?
                new ObjectParameter("created_date", created_date) :
                new ObjectParameter("created_date", typeof(System.DateTime));
    
            var created_userParameter = created_user.HasValue ?
                new ObjectParameter("created_user", created_user) :
                new ObjectParameter("created_user", typeof(long));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var inspection_autoParameter = inspection_auto.HasValue ?
                new ObjectParameter("inspection_auto", inspection_auto) :
                new ObjectParameter("inspection_auto", typeof(int));
    
            var comparttype_autoParameter = comparttype_auto.HasValue ?
                new ObjectParameter("comparttype_auto", comparttype_auto) :
                new ObjectParameter("comparttype_auto", typeof(long));
    
            var tool_autoParameter = tool_auto.HasValue ?
                new ObjectParameter("tool_auto", tool_auto) :
                new ObjectParameter("tool_auto", typeof(int));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("position", position) :
                new ObjectParameter("position", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StoreCompartAttachmentForNewEquip", compartid_autoParameter, compart_attach_type_autoParameter, attachmentParameter, file_nameParameter, created_dateParameter, created_userParameter, commentsParameter, inspection_autoParameter, comparttype_autoParameter, tool_autoParameter, positionParameter, result);
        }
    
        public virtual ObjectResult<spGetMobileAppVersion_Result> spGetMobileAppVersion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetMobileAppVersion_Result>("spGetMobileAppVersion");
        }
    }
}
